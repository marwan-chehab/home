#include <Wire.h>
#include <ArduinoJson.h>

#define SLAVE_ADDR 8

String receivedData = "";
bool newDataAvailable = false;

const int burnerPin = 2;
const int heaterPin = 7;
const int pumpPin = 10;

void receiveEvent(int bytes) {
    Serial.print("üì• Received ");
    Serial.print(bytes);
    Serial.println(" bytes:");
    
    while (Wire.available()) {
        char c = Wire.read();
        Serial.print(" [");
        Serial.print(c);
        Serial.print("]");
        if (c == '\n') {
            Serial.print("\nüîç Raw Data: ");
            Serial.println(receivedData);
            if (receivedData.startsWith("{") && receivedData.endsWith("}")) {
                newDataAvailable = true;
            } else {
                Serial.println("‚ö†Ô∏è Invalid JSON received: " + receivedData);
                receivedData = "";
            }
        } else {
            receivedData += c;
        }
    }
}

void setup() {
    Serial.begin(115200);
    Wire.begin(SLAVE_ADDR);
    Wire.onReceive(receiveEvent);

    pinMode(burnerPin, OUTPUT);
    pinMode(heaterPin, OUTPUT);
    pinMode(pumpPin, OUTPUT);

    Serial.println("‚úÖ Arduino Nano Ready");
}

void loop() {
    if (newDataAvailable) {
        StaticJsonDocument<256> doc;
        DeserializationError error = deserializeJson(doc, receivedData);

        if (!error) {
            String deviceType = doc["device"];
            String status = doc["status"];

            Serial.print("üìú Device: ");
            Serial.print(deviceType);
            Serial.print(" -> ");
            Serial.println(status);

            if (deviceType == "burner") setOutput(burnerPin, status);
            if (deviceType == "heater") setOutput(heaterPin, status);
            if (deviceType == "pump") setOutput(pumpPin, status);
        } else {
            Serial.println("‚ùå JSON Parsing Failed: " + String(error.c_str()));
        }

        receivedData = "";
        newDataAvailable = false;
    }
    delay(100);
}

void setOutput(int pin, String status) {
    bool newState = (status == "on") ? HIGH : LOW;
    digitalWrite(pin, newState);
    Serial.print("‚úÖ Pin ");
    Serial.print(pin);
    Serial.println(newState ? " -> ON" : " -> OFF");
}
